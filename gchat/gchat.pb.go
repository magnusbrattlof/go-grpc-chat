// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gchat.proto

package gchat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserContent struct {
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserContent) Reset()         { *m = UserContent{} }
func (m *UserContent) String() string { return proto.CompactTextString(m) }
func (*UserContent) ProtoMessage()    {}
func (*UserContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_df1dce88d8f72ba5, []int{0}
}

func (m *UserContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserContent.Unmarshal(m, b)
}
func (m *UserContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserContent.Marshal(b, m, deterministic)
}
func (m *UserContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserContent.Merge(m, src)
}
func (m *UserContent) XXX_Size() int {
	return xxx_messageInfo_UserContent.Size(m)
}
func (m *UserContent) XXX_DiscardUnknown() {
	xxx_messageInfo_UserContent.DiscardUnknown(m)
}

var xxx_messageInfo_UserContent proto.InternalMessageInfo

func (m *UserContent) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserContent) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ChatMessage struct {
	Sequence             int32                `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Message              string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_df1dce88d8f72ba5, []int{1}
}

func (m *ChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessage.Unmarshal(m, b)
}
func (m *ChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessage.Marshal(b, m, deterministic)
}
func (m *ChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessage.Merge(m, src)
}
func (m *ChatMessage) XXX_Size() int {
	return xxx_messageInfo_ChatMessage.Size(m)
}
func (m *ChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessage proto.InternalMessageInfo

func (m *ChatMessage) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *ChatMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ChatMessage) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type RegisterResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df1dce88d8f72ba5, []int{2}
}

func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (m *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(m, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LoginResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df1dce88d8f72ba5, []int{3}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LogoutResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutResponse) Reset()         { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()    {}
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df1dce88d8f72ba5, []int{4}
}

func (m *LogoutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutResponse.Unmarshal(m, b)
}
func (m *LogoutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutResponse.Marshal(b, m, deterministic)
}
func (m *LogoutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutResponse.Merge(m, src)
}
func (m *LogoutResponse) XXX_Size() int {
	return xxx_messageInfo_LogoutResponse.Size(m)
}
func (m *LogoutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutResponse proto.InternalMessageInfo

func (m *LogoutResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type MessageResponse struct {
	Val                  bool     `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageResponse) Reset()         { *m = MessageResponse{} }
func (m *MessageResponse) String() string { return proto.CompactTextString(m) }
func (*MessageResponse) ProtoMessage()    {}
func (*MessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df1dce88d8f72ba5, []int{5}
}

func (m *MessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageResponse.Unmarshal(m, b)
}
func (m *MessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageResponse.Marshal(b, m, deterministic)
}
func (m *MessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageResponse.Merge(m, src)
}
func (m *MessageResponse) XXX_Size() int {
	return xxx_messageInfo_MessageResponse.Size(m)
}
func (m *MessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MessageResponse proto.InternalMessageInfo

func (m *MessageResponse) GetVal() bool {
	if m != nil {
		return m.Val
	}
	return false
}

func init() {
	proto.RegisterType((*UserContent)(nil), "gchat.UserContent")
	proto.RegisterType((*ChatMessage)(nil), "gchat.ChatMessage")
	proto.RegisterType((*RegisterResponse)(nil), "gchat.RegisterResponse")
	proto.RegisterType((*LoginResponse)(nil), "gchat.LoginResponse")
	proto.RegisterType((*LogoutResponse)(nil), "gchat.LogoutResponse")
	proto.RegisterType((*MessageResponse)(nil), "gchat.MessageResponse")
}

func init() { proto.RegisterFile("gchat.proto", fileDescriptor_df1dce88d8f72ba5) }

var fileDescriptor_df1dce88d8f72ba5 = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x51, 0x4f, 0xc2, 0x30,
	0x14, 0x85, 0x37, 0xc9, 0x10, 0xee, 0xa2, 0x92, 0x06, 0x75, 0xd9, 0x8b, 0xa4, 0x46, 0xc3, 0xd3,
	0x48, 0x20, 0x26, 0x1a, 0x1f, 0x89, 0x6f, 0xf8, 0x32, 0xf4, 0x07, 0x0c, 0xb8, 0x96, 0x45, 0xd6,
	0xce, 0xb5, 0xc3, 0x27, 0x7f, 0xb4, 0xff, 0xc0, 0xd0, 0xae, 0x03, 0x09, 0x09, 0x6f, 0x3d, 0xb7,
	0xdf, 0x4d, 0xcf, 0xe9, 0x01, 0x9f, 0xcd, 0x97, 0x89, 0x8a, 0xf2, 0x42, 0x28, 0x41, 0x3c, 0x2d,
	0xc2, 0x1b, 0x26, 0x04, 0x5b, 0xe1, 0x40, 0x0f, 0x67, 0xe5, 0xc7, 0x40, 0xa5, 0x19, 0x4a, 0x95,
	0x64, 0xb9, 0xe1, 0xe8, 0x0b, 0xf8, 0xef, 0x12, 0x8b, 0xb1, 0xe0, 0x0a, 0xb9, 0x22, 0x21, 0xb4,
	0x4a, 0x89, 0x05, 0x4f, 0x32, 0x0c, 0x4e, 0x7a, 0x6e, 0xbf, 0x1d, 0xd7, 0x7a, 0x73, 0x97, 0x27,
	0x52, 0x7e, 0x8b, 0x62, 0x11, 0x34, 0xcc, 0x9d, 0xd5, 0xf4, 0x07, 0xfc, 0xf1, 0x32, 0x51, 0xaf,
	0x28, 0x65, 0xc2, 0x34, 0x2a, 0xf1, 0xab, 0x44, 0x3e, 0xc7, 0xc0, 0xed, 0xb9, 0x7d, 0x2f, 0xae,
	0x35, 0x09, 0xe0, 0x34, 0x33, 0x58, 0xf5, 0x82, 0x95, 0xe4, 0x11, 0xda, 0xb5, 0x3d, 0xfd, 0x82,
	0x3f, 0x0c, 0x23, 0x13, 0x20, 0xb2, 0x01, 0xa2, 0x37, 0x4b, 0xc4, 0x5b, 0x98, 0xf6, 0xa1, 0x13,
	0x23, 0x4b, 0xa5, 0xc2, 0x22, 0x46, 0x99, 0x0b, 0x2e, 0x91, 0x74, 0xc1, 0x53, 0xe2, 0x13, 0xb9,
	0x36, 0xd0, 0x8e, 0x8d, 0xa0, 0x77, 0x70, 0x36, 0x11, 0x2c, 0xe5, 0x47, 0xb0, 0x7b, 0x38, 0x9f,
	0x08, 0x26, 0x4a, 0x75, 0x84, 0xbb, 0x85, 0x8b, 0x2a, 0x73, 0x0d, 0x76, 0xa0, 0xb1, 0x4e, 0x56,
	0x1a, 0x6b, 0xc5, 0x9b, 0xe3, 0xf0, 0xd7, 0x35, 0xbf, 0x33, 0xc5, 0x62, 0x9d, 0xce, 0x91, 0x3c,
	0x41, 0xcb, 0xba, 0x25, 0x24, 0x32, 0xad, 0xed, 0x94, 0x10, 0x5e, 0x57, 0xb3, 0xfd, 0x48, 0xd4,
	0x21, 0x23, 0xf0, 0xb4, 0xfd, 0x83, 0x7b, 0xdd, 0x6a, 0xf6, 0x2f, 0x20, 0x75, 0xc8, 0x03, 0x34,
	0x4d, 0x98, 0x83, 0x5b, 0x97, 0xdb, 0xad, 0x9d, 0xbc, 0xd4, 0x21, 0xcf, 0xe0, 0x4f, 0x91, 0x2f,
	0x6c, 0xa7, 0x76, 0x77, 0xa7, 0xe7, 0xf0, 0xaa, 0x9a, 0xed, 0xfd, 0x01, 0x75, 0x66, 0x4d, 0x5d,
	0xd8, 0xe8, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x51, 0xd3, 0xf2, 0x95, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatServiceClient is the client API for ChatService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatServiceClient interface {
	Register(ctx context.Context, in *UserContent, opts ...grpc.CallOption) (*RegisterResponse, error)
	Login(ctx context.Context, in *UserContent, opts ...grpc.CallOption) (*LoginResponse, error)
	Logout(ctx context.Context, in *UserContent, opts ...grpc.CallOption) (*LogoutResponse, error)
	SendMessage(ctx context.Context, in *ChatMessage, opts ...grpc.CallOption) (*MessageResponse, error)
}

type chatServiceClient struct {
	cc *grpc.ClientConn
}

func NewChatServiceClient(cc *grpc.ClientConn) ChatServiceClient {
	return &chatServiceClient{cc}
}

func (c *chatServiceClient) Register(ctx context.Context, in *UserContent, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/gchat.ChatService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) Login(ctx context.Context, in *UserContent, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/gchat.ChatService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) Logout(ctx context.Context, in *UserContent, opts ...grpc.CallOption) (*LogoutResponse, error) {
	out := new(LogoutResponse)
	err := c.cc.Invoke(ctx, "/gchat.ChatService/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) SendMessage(ctx context.Context, in *ChatMessage, opts ...grpc.CallOption) (*MessageResponse, error) {
	out := new(MessageResponse)
	err := c.cc.Invoke(ctx, "/gchat.ChatService/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServiceServer is the server API for ChatService service.
type ChatServiceServer interface {
	Register(context.Context, *UserContent) (*RegisterResponse, error)
	Login(context.Context, *UserContent) (*LoginResponse, error)
	Logout(context.Context, *UserContent) (*LogoutResponse, error)
	SendMessage(context.Context, *ChatMessage) (*MessageResponse, error)
}

// UnimplementedChatServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChatServiceServer struct {
}

func (*UnimplementedChatServiceServer) Register(ctx context.Context, req *UserContent) (*RegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedChatServiceServer) Login(ctx context.Context, req *UserContent) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedChatServiceServer) Logout(ctx context.Context, req *UserContent) (*LogoutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedChatServiceServer) SendMessage(ctx context.Context, req *ChatMessage) (*MessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}

func RegisterChatServiceServer(s *grpc.Server, srv ChatServiceServer) {
	s.RegisterService(&_ChatService_serviceDesc, srv)
}

func _ChatService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserContent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gchat.ChatService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Register(ctx, req.(*UserContent))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserContent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gchat.ChatService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Login(ctx, req.(*UserContent))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserContent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gchat.ChatService/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).Logout(ctx, req.(*UserContent))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatService_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServiceServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gchat.ChatService/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServiceServer).SendMessage(ctx, req.(*ChatMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gchat.ChatService",
	HandlerType: (*ChatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _ChatService_Register_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _ChatService_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _ChatService_Logout_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _ChatService_SendMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gchat.proto",
}
